@model Projet2.ViewModels.HomeViewModel
@{
    ViewData["Title"] = "Regler Panier";
}


<section class=" gradient-custom">
    <div class="container py-5 h-100">
        <div class="row justify-content-center align-items-center h-100">
            <div class="col-12 col-lg-10 col-xl-7">
                <div class="card shadow-2-strong card-registration" style="border-radius: 15px;">
                    <div class="card-body p-4 p-md-3 text-center">
                        <div>
                            <div id="content">
                                <div class="notify successbox">
                                    <h1>Commande Finalisée</h1><br />
                                    <span class="alerticon"><img src="https://i0.wp.com/objectifalpinisme.com/wp-content/uploads/2021/02/pngegg.png?w=750&ssl=1" alt="checkmark" style=" max-height: 50px" /></span><br />
                                </div>

                                <div id="Box">
                                    <hr />
                                    <dl class="dl-horizontal">
                                        <dt>
                                            N° de Commande :
                                        </dt>

                                        <dd>
                                            @Model.Commande.Id
                                        </dd>

                                        <dt>
                                            Montant de la transaction :
                                        </dt>

                                        <dd>
                                            € @Decimal.Round(Model.PanierBoutique.Total, 2)
                                        </dd>

                                        <dt>
                                            Date de commande :
                                        </dt>

                                        <dd>
                                            @Model.Commande.DateCommande
                                        </dd>

                                        <dt>
                                            Date de Livraison :
                                        </dt>

                                        <dd>
                                            @Model.Commande.DateLivraison
                                        </dd>

                                        <dt>
                                            Etat de la commande :
                                        </dt>

                                        <dd>
                                            @Model.Commande.EtatCommande;
                                        </dd>

                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div>Recaputilatif commande</div>
@Html.LabelFor(m => Model.PanierSaisonnier.NomPanier)

<div>Adresse de facturation</div>
<form onsubmit="return validate()">
    <input type="checkbox" id="contrat" /> J'ai lu et j'accepte les conditions du <a href="" data-bs-toggle="modal" data-bs-target="#staticBackdrop">contrat</a>
    <div>
    <input type="submit" value="submit" />
     </div>
</form>


<!-- Modal -->
<div class="modal fade " id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Mon contrat</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                This is some placeholder content to show the scrolling behavior for modals.

                <br />
                We use repeated line breaks to demonstrate how content can exceed minimum inner 
                height, thereby showing inner scrolling.

                <br />
                When content becomes longer than the predefined max-height of modal, content will 
                be cropped and scrollable within the modal.

                This is some placeholder content to show the scrolling behavior for modals.
                <br />
                We use repeated line breaks to demonstrate how content can exceed minimum inner height, 
                thereby showing inner scrolling.
                <br />

                <strong>When content becomes longer than the predefined max-height of modal,
                content will be cropped and scrollable within the modal.</strong>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">J'ai compris'
                </button>
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Annuler", "AfficherPaniers", "Panier", new { @class = "btn btn-primary" })
    @Html.ActionLink("Continuer mon achat", "PaiementPanier", "Payment", new { @class = "card-link" })
</div>

